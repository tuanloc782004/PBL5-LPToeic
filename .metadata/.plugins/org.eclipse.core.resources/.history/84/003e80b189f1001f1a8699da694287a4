package com.pbl5.service.impl;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import com.pbl5.model.Grammar;
import com.pbl5.repository.GrammarRepository;
import com.pbl5.service.GrammarService;

import jakarta.persistence.EntityNotFoundException;

public class GrammarServiceImpl implements GrammarService {

	private static final Logger logger = LoggerFactory.getLogger(UserServiceImpl.class);

	@Autowired
	private GrammarRepository grammarRepository;

	@Override
	public List<Grammar> findByKeyword(String keyword) {
		// TODO Auto-generated method stub
		try {
			return this.grammarRepository.findByKeyword(keyword);
		} catch (Exception e) {
			logger.error("Lỗi khi tìm bài học ngữ pháp với keyword: " + keyword, e);
			return List.of(); // Trả về danh sách rỗng nếu có lỗi
		}
	}

	@Override
	public Page<Grammar> findAll(Integer pageno) {
		// TODO Auto-generated method stub
		try {
			Pageable pageable = PageRequest.of(pageno - 1, 5);
			return this.grammarRepository.findAll(pageable);
		} catch (Exception e) {
			logger.error("Lỗi khi lấy danh sách bài học ngữ pháp trang " + pageno, e);
			return Page.empty(); // Trả về trang rỗng nếu có lỗi
		}
	}

	@Override
	public Page<Grammar> findByKeyword(String keyword, Integer pageNo) {
		// TODO Auto-generated method stub
		try {
			List<Grammar> list = this.grammarRepository.findByKeyword(keyword);
			Pageable pageable = PageRequest.of(pageNo - 1, 5);
			int start = (int) pageable.getOffset();
			int end = Math.min(start + pageable.getPageSize(), list.size());

			if (start > list.size()) {
				return Page.empty();
			}

			List<Grammar> sublist = list.subList(start, end);
			return new PageImpl<>(sublist, pageable, list.size());
		} catch (Exception e) {
			logger.error("Lỗi khi tìm bài học ngữ pháp theo keyword: " + keyword + " trang " + pageNo, e);
			return Page.empty();
		}
	}

	@Override
	public void deleteById(Long id) {
		// TODO Auto-generated method stub
		try {
			if (!grammarRepository.existsById(id)) {
				throw new EntityNotFoundException("Bài học ngữ pháp với ID " + id + " không tồn tại.");
			}
			this.grammarRepository.deleteById(id);
		} catch (EntityNotFoundException e) {
			logger.warn(e.getMessage());
		} catch (Exception e) {
			logger.error("Lỗi khi xóa bài học ngữ pháp với ID: " + id, e);
		}
	}

	@Override
	public Grammar save(Grammar grammar) {
		// TODO Auto-generated method stub
		try {
			return this.grammarRepository.save(grammar);
		} catch (Exception e) {
			logger.error("Lỗi khi lưu bài học ngữ pháp: " + grammar, e);
			throw new RuntimeException("Không thể lưu bài học ngữ pháp", e);
		}
	}

}
