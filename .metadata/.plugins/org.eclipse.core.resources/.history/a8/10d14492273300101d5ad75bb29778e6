package com.pbl5.ai;

import ai.djl.ModelException;
import ai.djl.inference.Predictor;
import ai.djl.repository.zoo.Criteria;
import ai.djl.repository.zoo.ZooModel;
import ai.djl.translate.TranslateException;
import org.springframework.stereotype.Service;

import com.pbl5.dto.Part5DTO;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

@Service
public class AiQuestionServiceImpl implements AiQuestionService {

	private ZooModel<String, String> model;
	private Predictor<String, String> predictor;

	public AiQuestionServiceImpl() throws IOException, ModelException {
		// Load model text generation (ví dụ GPT-2 nhỏ)
		Criteria<String, String> criteria = Criteria.builder().setTypes(String.class, String.class)
				.optApplication(Application.NLP.TEXT_GENERATION)
				// Bạn có thể thêm filter model, ví dụ "size", "124M" hay "gpt2"
				.build();

		model = criteria.loadModel();
		predictor = model.newPredictor(TextGenerationTranslator.builder().build());
	}

	@Override
	public List<Part5DTO> generatePart5Questions(int count) {
		List<Part5DTO> questions = new ArrayList<>();
		String prompt = """
				Generate a TOEIC Part 5 multiple-choice grammar question in the following format:

				Question: [Sentence with one blank]

				(A) [Option A]
				(B) [Option B]

				Answer: [Correct option letter, e.g., A or B]

				The answer should start with (A) or (B), and the correct answer must be a single letter.
				""";

		for (int i = 0; i < count; i++) {
			String raw = callAIToGenerateQuestion(prompt);
			Part5DTO dto = parseFromRawText(raw);
			questions.add(dto);
		}

		return questions;
	}

	private String callAIToGenerateQuestion(String prompt) {
		try {
			return predictor.predict(prompt);
		} catch (TranslateException e) {
			e.printStackTrace();
			return "";
		}
	}

	public Part5DTO parseFromRawText(String raw) {
		Part5DTO dto = new Part5DTO();

		try {
			// Tách câu hỏi (Question:)
			String question = raw.split("Question:")[1].split("\\(A\\)")[0].trim();

			// Tách các option A, B
			String optionsPart = raw.substring(raw.indexOf("(A)"));
			String optionA = optionsPart.split("\\(B\\)")[0].replace("(A)", "").trim();
			String optionB = optionsPart.split("\\(B\\)")[1].split("Answer:")[0].trim();

			// Tách đáp án đúng (Answer:)
			String answer = raw.split("Answer:")[1].split("\\n")[0].trim();

			dto.setQuestion(question);
			dto.setOptionA(optionA);
			dto.setOptionB(optionB);
			dto.setOptionC(null); // Part5 bạn chỉ yêu cầu 2 option, nên set null
			dto.setOptionD(null);
			dto.setCorrectAnswer(answer);
			dto.setExplanation(null); // Nếu có thêm explanation, bạn parse tương tự

		} catch (Exception e) {
			dto.setQuestion("Could not parse question");
			dto.setOptionA("A");
			dto.setOptionB("B");
			dto.setOptionC(null);
			dto.setOptionD(null);
			dto.setCorrectAnswer("A");
			dto.setExplanation("Parsing error");
		}

		return dto;
	}
}
