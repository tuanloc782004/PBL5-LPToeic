<!DOCTYPE html>
<html lang="vi">
<head>
<meta charset="UTF-8">
<title>Nhập mã OTP</title>
<link rel="stylesheet" th:href="@{/login-form-asset/style.css}">
<link
	href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap"
	rel="stylesheet">
<style>
* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-family: 'Montserrat', sans-serif;
}

body {
	background-color: #c9d6ff;
	background: linear-gradient(to right, #e2e2e2, #c9d6ff);
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: column;
	height: 100vh;
}

.container {
	background-color: #fff;
	border-radius: 30px;
	box-shadow: 0 5px 15px rgba(0, 0, 0, 0.35);
	width: 400px;
	max-width: 90%;
	padding: 40px;
	text-align: center;
}

h2 {
	margin-bottom: 20px;
	color: #333;
}

.otp-inputs {
	display: flex;
	justify-content: center;
	margin-bottom: 20px;
}

.otp-inputs input {
	width: 40px;
	height: 50px;
	margin: 0 5px;
	font-size: 24px;
	text-align: center;
	border: 1px solid #ccc;
	border-radius: 8px;
	background-color: #eee;
	outline: none;
}

.timer {
	font-weight: bold;
	margin-bottom: 10px;
	color: #444;
}

.resend-btn {
	display: none;
	background-color: transparent;
	border: none;
	color: #512da8;
	font-size: 14px;
	cursor: pointer;
	text-decoration: underline;
}

button[type="submit"] {
	background-color: #512da8;
	color: #fff;
	font-size: 13px;
	padding: 10px 30px;
	border: none;
	border-radius: 8px;
	font-weight: 600;
	letter-spacing: 0.5px;
	text-transform: uppercase;
	margin-top: 10px;
	cursor: pointer;
}

p {
	font-size: 14px;
	margin-bottom: 10px;
}

form {
	margin-bottom: 10px;
}
</style>
</head>
<body>
	<div class="container">
		<form id="otpForm" th:action="@{/verify-otp}" method="post">
			<h2>Nhập mã OTP</h2>
			<p th:text="${error}" style="color: red;"></p>
			<p th:text="${resendSuccess} ? 'Đã gửi lại mã OTP!' : ''"
				style="color: green;"></p>

			<input type="hidden" name="email" th:value="${email}">

			<div class="otp-inputs">
				<input type="text" maxlength="1" class="otp" name="otp" required
					autofocus> <input type="text" maxlength="1" class="otp">
				<input type="text" maxlength="1" class="otp"> <input
					type="text" maxlength="1" class="otp"> <input type="text"
					maxlength="1" class="otp"> <input type="text" maxlength="1"
					class="otp">
			</div>

			<input type="hidden" id="fullOtp" name="otp" />
			<div class="timer" id="timer">
				Thời gian còn lại: <span id="countdown">60</span>s
			</div>
			<button type="submit">Xác nhận</button>
		</form>

		<form id="resendForm" th:action="@{/resend-otp}" method="post">
			<input type="hidden" name="email" th:value="${email}" />
			<button type="submit" class="resend-btn" id="resendBtn">Gửi
				lại mã</button>
		</form>
	</div>

	<script>
    const otpInputs = document.querySelectorAll('.otp');
    const fullOtp = document.getElementById('fullOtp');
    const countdown = document.getElementById('countdown');
    const resendBtn = document.getElementById('resendBtn');

    otpInputs.forEach((input, i) => {
      input.addEventListener('input', () => {
        if (input.value.length === 1 && i < otpInputs.length - 1) {
          otpInputs[i + 1].focus();
        }
        fullOtp.value = [...otpInputs].map(i => i.value).join('');
      });

      input.addEventListener('keydown', (e) => {
        if (e.key === "Backspace" && !input.value && i > 0) {
          otpInputs[i - 1].focus();
        }
      });
    });

    let timeLeft = 60;
    const timer = setInterval(() => {
      timeLeft--;
      countdown.textContent = timeLeft;
      if (timeLeft <= 0) {
        clearInterval(timer);
        document.getElementById('timer').textContent = "Hết thời gian.";
        resendBtn.style.display = "inline";
      }
    }, 1000);
  </script>
</body>
</html>
